{{- if eq "true" (include "stackgres.operator.upgradeCrds" .) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-upgrade"
  namespace: {{ .Release.Namespace }}
  labels:
    app: stackgres-operator
    scope: init
    job: upgrade
  annotations:
    "helm.sh/hook": post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "60"
    {{- with .Values.jobs.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator
        scope: init
        job: upgrade
    spec:
      serviceAccountName: {{ .Release.Name }}-init
      containers:
      - name: "{{ .Release.Name }}-upgrade"
        image: {{ template "kubectl.image" . }}
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl get sgcluster -A --template '{{ "{{ range .items }}{{ printf \"%s:%s\\n\" .metadata.namespace .metadata.name }}{{ end }}" }}' > clusters
            while read CLUSTER
            do
              OPERATOR_VERSION="$(kubectl get sgcluster -n "${CLUSTER%:*}" "${CLUSTER#*:}" \
                --template '{{ "{{" }} index .metadata.annotations "stackgres.io/operatorVersion" {{ "}}" }}')"
              if echo "$OPERATOR_VERSION" | grep -q '^1\.[34]\($\|\.\)'
              then
                kubectl get podmonitor,servicemonitor -A \
                  --template '{{ range .items }}{{ printf "%s %s %s\n" .metadata.namespace .kind .metadata.name }}{{ end }}' \
                  -l "app=StackGresCluster,stackgres.io/cluster-namespace=${CLUSTER#*:},stackgres.io/cluster-name=${CLUSTER#*:}")" \
                  > prometheus-monitors
                while read PROMETHEUS_MONITOR_NAMESPACE PROMETHEUS_MONITOR_KIND PROMETHEUS_MONITOR_NAME
                do
                  kubectl delete -n "$PROMETHEUS_MONITOR_NAMESPACE" "$PROMETHEUS_MONITOR_KIND" "$PROMETHEUS_MONITOR_NAME"
                done < prometheus-monitors
              fi
            done < clusters
      restartPolicy: OnFailure
{{- end }}
